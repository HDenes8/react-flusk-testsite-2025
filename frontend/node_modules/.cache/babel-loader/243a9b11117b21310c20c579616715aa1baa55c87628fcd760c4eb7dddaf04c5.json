{"ast":null,"code":"var _jsxFileName = \"D:\\\\repos\\\\WorkStuff\\\\react-flusk-testsite-2025\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [message, setMessage] = useState('Loading...'); // Default message while loading\n  const [data, setData] = useState(null); // Database data\n  const [isMessageLoading, setIsMessageLoading] = useState(true); // Loading state for the message\n  const [isDataLoading, setIsDataLoading] = useState(true); // Loading state for database\n\n  useEffect(() => {\n    // Fetch data from the backend\n    fetch('http://localhost:5000/') // Replace with your backend URL\n    .then(response => response.json()).then(data => {\n      setMessage(data.message || 'Hello from Flask!');\n      setData(data.data || null);\n      setIsMessageLoading(false); // Stop loading for the message\n      setIsDataLoading(false); // Stop loading for the database\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n      setMessage('Error fetching data from the backend.');\n      setIsMessageLoading(false);\n      setIsDataLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '50px',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontSize: '3rem',\n        fontWeight: 'bold'\n      },\n      children: \"Flask + React\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        fontSize: '1.5rem',\n        color: '#555'\n      },\n      children: isMessageLoading ? 'Loading...' : message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        fontSize: '1.2rem',\n        color: '#333'\n      },\n      children: isDataLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading database entry...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this) // Show loading message while fetching database data\n      : data ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"User \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: data.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 18\n        }, this), \" added to the database!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No data found in the database.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this) // Show this if no data is available\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"qg43Lejhkx8mGBtIrMIaZMFCv50=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Home","_s","message","setMessage","data","setData","isMessageLoading","setIsMessageLoading","isDataLoading","setIsDataLoading","fetch","then","response","json","catch","error","console","style","textAlign","marginTop","fontFamily","children","fontSize","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","color","name","_c","$RefreshReg$"],"sources":["D:/repos/WorkStuff/react-flusk-testsite-2025/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst Home = () => {\r\n  const [message, setMessage] = useState('Loading...'); // Default message while loading\r\n  const [data, setData] = useState(null); // Database data\r\n  const [isMessageLoading, setIsMessageLoading] = useState(true); // Loading state for the message\r\n  const [isDataLoading, setIsDataLoading] = useState(true); // Loading state for database\r\n\r\n  useEffect(() => {\r\n    // Fetch data from the backend\r\n    fetch('http://localhost:5000/') // Replace with your backend URL\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setMessage(data.message || 'Hello from Flask!');\r\n        setData(data.data || null);\r\n        setIsMessageLoading(false); // Stop loading for the message\r\n        setIsDataLoading(false); // Stop loading for the database\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching data:', error);\r\n        setMessage('Error fetching data from the backend.');\r\n        setIsMessageLoading(false);\r\n        setIsDataLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', marginTop: '50px', fontFamily: 'Arial, sans-serif' }}>\r\n      {/* Main Template Sign */}\r\n      <h1 style={{ fontSize: '3rem', fontWeight: 'bold' }}>Flask + React</h1>\r\n\r\n      {/* Smaller Message */}\r\n      <h2 style={{ fontSize: '1.5rem', color: '#555' }}>\r\n        {isMessageLoading ? 'Loading...' : message}\r\n      </h2>\r\n\r\n      {/* Database Entry */}\r\n      <div style={{ marginTop: '20px', fontSize: '1.2rem', color: '#333' }}>\r\n        {isDataLoading ? (\r\n          <p>Loading database entry...</p> // Show loading message while fetching database data\r\n        ) : data ? (\r\n          <p>\r\n            User <strong>{data.name}</strong> added to the database!\r\n          </p>\r\n        ) : (\r\n          <p>No data found in the database.</p> // Show this if no data is available\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}